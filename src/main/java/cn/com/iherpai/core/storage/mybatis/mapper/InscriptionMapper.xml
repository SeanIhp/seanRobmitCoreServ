<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离 
注意：使用mapper代理方法开发，namespace有特殊重要的作用，namespace等于mapper接口地址
-->
<mapper namespace="cn.com.iherpai.core.storage.mybatis.mapper.InscriptionMapper">

	<sql id="queryCommon">
		<if test="id != null">
			AND id = #{id} 
		</if>
		<if test="serialId != null">
			AND serialId = #{serialId} 
		</if>
		<if test="accountId != null">
			AND account_id = #{accountId} 
		</if>
		<if test="wxLatitude != null">
			AND wx_latitude = #{wxLatitude} 
		</if>
		<if test="wxLongitude != null">
			AND wx_longitude LIKE "%"#{wxLongitude}"%" 
		</if>
		<if test="type != null">
			AND type = #{type} 
		</if>
		<if test="content != null">
			AND content = #{$content} 
		</if>
		<if test="resource != null">
			AND resource LIKE "%"#{resource}"%" 
		</if>
		<if test="createTime != null">
			AND createTime = #{createTime} 
		</if>
		<if test="score != null">
			AND score = #{score} 
		</if>
		<if test="favor != null">
			AND favor = #{favor} 
		</if>
		<if test="praise != null">
			AND praise = #{praise} 
		</if>
		<if test="despise != null">
			AND despise = #{despise} 
		</if>
		<if test="score_min != null">
			<![CDATA[				
			AND score >= #{score_min} 
			]]> 
		</if>
		<if test="score_max != null">
			<![CDATA[				
			AND score < #{score_max} 
			]]> 
		</if>
		<if test="status != null">
			AND status = #{status} 
		</if>
		<if test="status_min != null">
			<![CDATA[				
			AND status >= #{status_min} 
			]]> 
		</if>
		<if test="status_max != null">
			<![CDATA[				
			AND status < #{status_max} 
			]]> 
		</if>
	</sql>
	
	
	
	<sql id="updateFields">
		<if test="score != null">
			score = #{score},
		</if>
		<if test="favor != null">
			favor = #{favor},
		</if>
		<if test="praise != null">
			praise = #{praise},
		</if>
		<if test="despise != null">
			despise = #{despise},
		</if>
		<if test="status != null">
			status = #{status},
		</if>
	</sql>
	



	<insert id="add" parameterType="Inscription">
		INSERT INTO inscription(
			id, 
			serialId
			account_id, 
			wx_latitude,
			wx_longitude,
			type,
			content,
			resource,
			createTime,
			score,
			favor,
			praise,
			despise,
			status
		) VALUES (
			#{id},
			#{serialId},
			#{accountId},
			#{wxLatitude},
			#{wxLongitude},
			#{type},
			#{content},
			#{resource},
			#{createTime},
			#{score},
			#{favor},
			#{praise},
			#{despise},
			#{status}
		)
	</insert>
	
	
	
	<delete id="removeById" parameterType="long">
		DELETE 
		FROM 
			inscription 
		WHERE 
			id = #{id}
	</delete>
	
	
	
	<delete id="remove" parameterType="java.util.HashMap">
		DELETE 
		FROM 
			inscription 
		<where>
			<include refid="queryCommon"/>
		</where>
	</delete>
	
	
	
	<update id="update" parameterType="java.util.HashMap">
		UPDATE 
			inscription
		<set>
			<include refid="updateFields"/>
		</set>
		<where>
			<include refid="queryCommon"/>
		</where>
	</update>
	
	
	
	<select id="get" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT 
			${fields} 
		FROM 
			inscription 
		<where>
			<include refid="queryCommon"/>
		</where>
	</select>
	
	
	
	<select id="getCount" parameterType="java.util.HashMap" resultType="long">
		SELECT 
			count(id)
		FROM 
			inscription 
		<where>
			<include refid="queryCommon"/>
		</where>
	</select>
	
	
	
	<select id="list" parameterType="java.util.HashMap" resultType="Inscription">
		SELECT 
			${fields}
		FROM
			inscription
		<where>
			<include refid="queryCommon"/>
		</where>
	</select>
	
	
	
</mapper>